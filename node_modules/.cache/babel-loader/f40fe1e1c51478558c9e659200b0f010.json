{"ast":null,"code":"import { createStore } from '@reduxjs/toolkit';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants';\nconst initialState = {\n  registry: [],\n  bootstrapped: false\n};\n\nconst persistorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const firstIndex = state.registry.indexOf(action.key);\n  const registry = [...state.registry];\n\n  switch (action.type) {\n    case REGISTER:\n      return Object.assign(Object.assign({}, state), {\n        registry: [...state.registry, action.key]\n      });\n\n    case REHYDRATE:\n      registry.splice(firstIndex, 1);\n      return Object.assign(Object.assign({}, state), {\n        registry,\n        bootstrapped: registry.length === 0\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default function persistStore(store, options, cb) {\n  // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n  if (process.env.NODE_ENV !== 'production') {\n    const optionsToTest = options || {};\n    const bannedKeys = ['blacklist', 'whitelist', 'transforms', 'storage', 'keyPrefix', 'migrate'];\n    bannedKeys.forEach(k => {\n      if (optionsToTest[k]) console.error(`reduxjs-toolkit-persist: invalid option passed to persistStore: \"${k}\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.`);\n    });\n  }\n\n  let boostrappedCb = cb || false;\n\n  const _pStore = createStore(persistorReducer, initialState, options && options.enhancer ? options.enhancer : undefined);\n\n  const register = key => {\n    _pStore.dispatch({\n      type: REGISTER,\n      key\n    });\n  };\n\n  const rehydrate = (key, payload, err) => {\n    const rehydrateAction = {\n      type: REHYDRATE,\n      payload,\n      err,\n      key\n    }; // dispatch to `store` to rehydrate and `persistor` to track result\n\n    store.dispatch(rehydrateAction);\n\n    _pStore.dispatch(rehydrateAction);\n\n    if (typeof boostrappedCb === \"function\" && persistor.getState().bootstrapped) {\n      boostrappedCb();\n      boostrappedCb = false;\n    }\n  };\n\n  const persistor = Object.assign(Object.assign({}, _pStore), {\n    purge: () => {\n      const results = [];\n      store.dispatch({\n        type: PURGE,\n        result: purgeResult => {\n          results.push(purgeResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    flush: () => {\n      const results = [];\n      store.dispatch({\n        type: FLUSH,\n        result: flushResult => {\n          results.push(flushResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    pause: () => {\n      store.dispatch({\n        type: PAUSE\n      });\n    },\n    persist: () => {\n      store.dispatch({\n        type: PERSIST,\n        register,\n        rehydrate\n      });\n    }\n  });\n\n  if (!(options && options.manualPersist)) {\n    persistor.persist();\n  }\n\n  return persistor;\n}","map":{"version":3,"sources":["/home/wv/Desktop/GitRepos/Ecommerce/React-Redux-E_commerce/node_modules/reduxjs-toolkit-persist/es/persistStore.js"],"names":["createStore","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","REHYDRATE","initialState","registry","bootstrapped","persistorReducer","state","action","firstIndex","indexOf","key","type","Object","assign","splice","length","persistStore","store","options","cb","process","env","NODE_ENV","optionsToTest","bannedKeys","forEach","k","console","error","boostrappedCb","_pStore","enhancer","undefined","register","dispatch","rehydrate","payload","err","rehydrateAction","persistor","getState","purge","results","result","purgeResult","push","Promise","all","flush","flushResult","pause","persist","manualPersist"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,aAAlE;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,YAAY,EAAE;AAFG,CAArB;;AAIA,MAAMC,gBAAgB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AACvD,QAAMC,UAAU,GAAGF,KAAK,CAACH,QAAN,CAAeM,OAAf,CAAuBF,MAAM,CAACG,GAA9B,CAAnB;AACA,QAAMP,QAAQ,GAAG,CAAC,GAAGG,KAAK,CAACH,QAAV,CAAjB;;AACA,UAAQI,MAAM,CAACI,IAAf;AACI,SAAKX,QAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAd,EAAwC;AAAEH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACG,GAA3B;AAAZ,OAAxC,CAAP;;AACJ,SAAKT,SAAL;AACIE,MAAAA,QAAQ,CAACW,MAAT,CAAgBN,UAAhB,EAA4B,CAA5B;AACA,aAAOI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAd,EAAwC;AAAEH,QAAAA,QAAF;AAAYC,QAAAA,YAAY,EAAED,QAAQ,CAACY,MAAT,KAAoB;AAA9C,OAAxC,CAAP;;AACJ;AACI,aAAOT,KAAP;AAPR;AASH,CAZD;;AAaA,eAAe,SAASU,YAAT,CAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,EAAtC,EAA0C;AACrD;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,UAAMC,aAAa,GAAGL,OAAO,IAAI,EAAjC;AACA,UAAMM,UAAU,GAAG,CACf,WADe,EAEf,WAFe,EAGf,YAHe,EAIf,SAJe,EAKf,WALe,EAMf,SANe,CAAnB;AAQAA,IAAAA,UAAU,CAACC,OAAX,CAAmBC,CAAC,IAAI;AACpB,UAAIH,aAAa,CAACG,CAAD,CAAjB,EACIC,OAAO,CAACC,KAAR,CAAe,oEAAmEF,CAAE,qHAApF;AACP,KAHD;AAIH;;AACD,MAAIG,aAAa,GAAGV,EAAE,IAAI,KAA1B;;AACA,QAAMW,OAAO,GAAGnC,WAAW,CAACU,gBAAD,EAAmBH,YAAnB,EAAiCgB,OAAO,IAAIA,OAAO,CAACa,QAAnB,GAA8Bb,OAAO,CAACa,QAAtC,GAAiDC,SAAlF,CAA3B;;AACA,QAAMC,QAAQ,GAAIvB,GAAD,IAAS;AACtBoB,IAAAA,OAAO,CAACI,QAAR,CAAiB;AACbvB,MAAAA,IAAI,EAAEX,QADO;AAEbU,MAAAA;AAFa,KAAjB;AAIH,GALD;;AAMA,QAAMyB,SAAS,GAAG,CAACzB,GAAD,EAAM0B,OAAN,EAAeC,GAAf,KAAuB;AACrC,UAAMC,eAAe,GAAG;AACpB3B,MAAAA,IAAI,EAAEV,SADc;AAEpBmC,MAAAA,OAFoB;AAGpBC,MAAAA,GAHoB;AAIpB3B,MAAAA;AAJoB,KAAxB,CADqC,CAOrC;;AACAO,IAAAA,KAAK,CAACiB,QAAN,CAAeI,eAAf;;AACAR,IAAAA,OAAO,CAACI,QAAR,CAAiBI,eAAjB;;AACA,QAAI,OAAOT,aAAP,KAAyB,UAAzB,IAAuCU,SAAS,CAACC,QAAV,GAAqBpC,YAAhE,EAA8E;AAC1EyB,MAAAA,aAAa;AACbA,MAAAA,aAAa,GAAG,KAAhB;AACH;AACJ,GAdD;;AAeA,QAAMU,SAAS,GAAG3B,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBiB,OAAlB,CAAd,EAA0C;AAAEW,IAAAA,KAAK,EAAE,MAAM;AACnE,YAAMC,OAAO,GAAG,EAAhB;AACAzB,MAAAA,KAAK,CAACiB,QAAN,CAAe;AACXvB,QAAAA,IAAI,EAAEZ,KADK;AAEX4C,QAAAA,MAAM,EAAGC,WAAD,IAAiB;AACrBF,UAAAA,OAAO,CAACG,IAAR,CAAaD,WAAb;AACH;AAJU,OAAf;AAMA,aAAOE,OAAO,CAACC,GAAR,CAAYL,OAAZ,CAAP;AACH,KATuD;AASrDM,IAAAA,KAAK,EAAE,MAAM;AACZ,YAAMN,OAAO,GAAG,EAAhB;AACAzB,MAAAA,KAAK,CAACiB,QAAN,CAAe;AACXvB,QAAAA,IAAI,EAAEf,KADK;AAEX+C,QAAAA,MAAM,EAAGM,WAAD,IAAiB;AACrBP,UAAAA,OAAO,CAACG,IAAR,CAAaI,WAAb;AACH;AAJU,OAAf;AAMA,aAAOH,OAAO,CAACC,GAAR,CAAYL,OAAZ,CAAP;AACH,KAlBuD;AAkBrDQ,IAAAA,KAAK,EAAE,MAAM;AACZjC,MAAAA,KAAK,CAACiB,QAAN,CAAe;AACXvB,QAAAA,IAAI,EAAEd;AADK,OAAf;AAGH,KAtBuD;AAsBrDsD,IAAAA,OAAO,EAAE,MAAM;AACdlC,MAAAA,KAAK,CAACiB,QAAN,CAAe;AAAEvB,QAAAA,IAAI,EAAEb,OAAR;AAAiBmC,QAAAA,QAAjB;AAA2BE,QAAAA;AAA3B,OAAf;AACH;AAxBuD,GAA1C,CAAlB;;AAyBA,MAAI,EAAEjB,OAAO,IAAIA,OAAO,CAACkC,aAArB,CAAJ,EAAyC;AACrCb,IAAAA,SAAS,CAACY,OAAV;AACH;;AACD,SAAOZ,SAAP;AACH","sourcesContent":["import { createStore } from '@reduxjs/toolkit';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants';\nconst initialState = {\n    registry: [],\n    bootstrapped: false,\n};\nconst persistorReducer = (state = initialState, action) => {\n    const firstIndex = state.registry.indexOf(action.key);\n    const registry = [...state.registry];\n    switch (action.type) {\n        case REGISTER:\n            return Object.assign(Object.assign({}, state), { registry: [...state.registry, action.key] });\n        case REHYDRATE:\n            registry.splice(firstIndex, 1);\n            return Object.assign(Object.assign({}, state), { registry, bootstrapped: registry.length === 0 });\n        default:\n            return state;\n    }\n};\nexport default function persistStore(store, options, cb) {\n    // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n    if (process.env.NODE_ENV !== 'production') {\n        const optionsToTest = options || {};\n        const bannedKeys = [\n            'blacklist',\n            'whitelist',\n            'transforms',\n            'storage',\n            'keyPrefix',\n            'migrate',\n        ];\n        bannedKeys.forEach(k => {\n            if (optionsToTest[k])\n                console.error(`reduxjs-toolkit-persist: invalid option passed to persistStore: \"${k}\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.`);\n        });\n    }\n    let boostrappedCb = cb || false;\n    const _pStore = createStore(persistorReducer, initialState, options && options.enhancer ? options.enhancer : undefined);\n    const register = (key) => {\n        _pStore.dispatch({\n            type: REGISTER,\n            key,\n        });\n    };\n    const rehydrate = (key, payload, err) => {\n        const rehydrateAction = {\n            type: REHYDRATE,\n            payload,\n            err,\n            key,\n        };\n        // dispatch to `store` to rehydrate and `persistor` to track result\n        store.dispatch(rehydrateAction);\n        _pStore.dispatch(rehydrateAction);\n        if (typeof boostrappedCb === \"function\" && persistor.getState().bootstrapped) {\n            boostrappedCb();\n            boostrappedCb = false;\n        }\n    };\n    const persistor = Object.assign(Object.assign({}, _pStore), { purge: () => {\n            const results = [];\n            store.dispatch({\n                type: PURGE,\n                result: (purgeResult) => {\n                    results.push(purgeResult);\n                },\n            });\n            return Promise.all(results);\n        }, flush: () => {\n            const results = [];\n            store.dispatch({\n                type: FLUSH,\n                result: (flushResult) => {\n                    results.push(flushResult);\n                },\n            });\n            return Promise.all(results);\n        }, pause: () => {\n            store.dispatch({\n                type: PAUSE,\n            });\n        }, persist: () => {\n            store.dispatch({ type: PERSIST, register, rehydrate });\n        } });\n    if (!(options && options.manualPersist)) {\n        persistor.persist();\n    }\n    return persistor;\n}\n"]},"metadata":{},"sourceType":"module"}